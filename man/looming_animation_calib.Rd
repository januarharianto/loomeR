% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/looming_animation_calib.R
\name{looming_animation_calib}
\alias{looming_animation_calib}
\title{Create a short animation for calibrating the looming animation function}
\usage{
looming_animation_calib(x, correction_range = c(0.02, 0.03), width = 1920,
  height = 1080, ruler = 10)
}
\arguments{
\item{x}{A list object of class \code{constant_speed_model},
\code{variable_speed_model}, or \code{\link{diameter_model}}}

\item{correction_range}{numeric vector of length = 2. Upper and lower range of
the correction factors to be tested}

\item{width}{integer. Width resolution of the display. E.g. for a display set
at 1080p resolution (1920x1080), this is \code{width = 1920}. Note: this is
NOT the native resolution, but the display resolution as set in the
operating system settings. Visit \url{https://whatismyscreenresolution.com}
on the playback display to check.}

\item{height}{integer. Height resolution of the display. E.g. for a display
set at 1080p resolution (1920x1080), this is \code{height = 1080}. Note:
this is NOT the native resolution, but the display resolution as set in the
operating system settings. Visit \url{https://whatismyscreenresolution.com}
on the playback display to check.}

\item{ruler}{numeric. Width in cm to check onscreen with your ruler. Should be
less than the physical horizontal width of the screen, or - obviously - it
will be too large to display.}
}
\description{
All screens are different, so an object of a hypothetical size
 may be displayed at a different size on a different screen, due to
 differences in resolution or the physical size of the pixels that make up
 the screen.

 \code{looming_animation_calib} is a utility to create a short animation from
 an object of class \code{\link{constant_speed_model}},
 \code{\link{variable_speed_model}}, or \code{\link{diameter_model}}. It
 requires \code{ffmpeg} (\url{http://ffmpeg.org}), an external,
 cross-platform, command line utility for encoding video, to be installed on
 your system. The function allows the \code{correction} value (typically in
 the range 0.01 - 0.06) used in \code{looming_animation} to be determined,
 and checks the desired screen diameter is correctly displayed. Requires
 access to the screen you intend to display the animation on, and a ruler or
 other method of physically measuring lengths on the screen. Output is a
 short 60 frame video containing a static image of 10 horizontal bars (it is
 not an image file to ensure software rendering onscreen is consistent). This
 video should be paused, made fullscreen and the bar closest in length to the
 entered \code{ruler} value used to estimate the correct \code{correction}
 value. The function can be run again to further refine estimates of the
 \code{correction} value, if the \code{ruler} width falls between two
 \code{correction} values. The \code{ruler} value should be less than the
 physical horizontal width of the screen, or - obviously - it will be too
 large to display. If creating different animations, the \code{correction}
 value will be the same for a particular screen as long as the display
 resolution remains the same (see Details).
}
\details{
IMPORTANT: The function works by saving an image
 (\code{loom_img_01.png} etc.) for every frame of the animation to the
 current working directory. It then uses \code{ffmpeg} to encode these images
 to an \code{.mp4} file (saved as \code{animation_calib.mp4}). It then
 deletes the \code{.png} files from the working directory. It will overwrite
 any \code{.png} or \code{.mp4} file it encounters which has an identical
 name.

 The function creates a 60 frame video containing a static image of 10
 horizontal bars along with the \code{correction} value used to create each.
 It is a video and not an image file to ensure software rendering onscreen is
 consistent. Open the file in the software you intend to use to play back the
 final animation, make it fullscreen, pause it, and physically measure the
 bars on the screen with a ruler to identify the correct \code{correction}
 value. If the closest result to the \code{ruler} width falls between two
 values, these can be entered as the \code{correction_range} and the function
 re-run to further refine the estimate. When a good value is determined, this
 should be used as the \code{correction} value in the
 \code{looming_animation} function to produce the final animation.

 The display resolution of the screen you will use to play the animation
 should be entered as \code{width} and \code{height}. NOTE - This is the
 current DISPLAY resolution, which is not necessarily the native resolution
 of the screen, but determined in the Displays preferences of your operating
 system. If you are unsure, visit \url{https://whatismyscreenresolution.com}
 on the device. These settings ensure the animation is in the correct aspect
 ratio and uses the full screen (although you are free to modify the aspect
 ratio if, for example, you want your animation to be square). Incorrect
 resolution values *should* still produce the correct widths onscreen,
 however I cannot guarantee all playback software will honour this, so best
 to follow the above guidelines if these details are important in your
 experiment.

 The function should work with both Windows and macOS (Linux coming soon),
 however it requires \code{ffmpeg} (\url{http://ffmpeg.org}), an external,
 cross-platform, command line utility for encoding video, to be installed on
 your system. For installation instructions see
 \url{http://adaptivesamples.com/how-to-install-ffmpeg-on-windows/} (may need
 to restart) or
 \url{https://github.com/fluent-ffmpeg/node-fluent-ffmpeg/wiki/Installing-ffmpeg-on-Mac-OS-X}





 \subsection{Note on smaller screens}{If you are using the function to
 calibrate for a small screen, for example a phone or tablet, the resulting
 video might look strange: low resolution, blurry, bad spacing, etc. This is
 a result of having to scale the text size to display properly. It should not
 affect the estimation of the \code{calibration} value. Please do let me know
 if you have any issues however.}
}
\section{Dependencies}{
 The function requires the following packages:
 \code{glue}.
}

\examples{
# make a looming model
loom_model <- constant_speed_model(
                     screen_distance = 20,
                     anim_frame_rate = 60,
                     speed = 500,
                     attacker_diameter = 50,
                     start_distance = 1000)

# use it to create a calibration video
looming_animation_calib(loom_model,
                           correction_range = c(0.02, 0.03),
                           width = 1920,
                           height = 1080,
                           ruler = 10)

}
\seealso{
\code{\link{constant_speed_model}},
 \code{\link{variable_speed_model}},  \code{\link{diameter_model}},
 \code{\link{looming_animation}}
}
\author{
Nicholas Carey - \email{nicholascarey@gmail.com}
}
